import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * FormPreview component displays the original document preview
 * with highlighted fields and extracted text
 */
const FormPreview = ({ extractedText, metadata, fields, isLoading }) => {
    if (isLoading) {
        return (_jsxs("div", { className: "flex items-center justify-center h-64", children: [_jsx("div", { className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600" }), _jsx("span", { className: "ml-2 text-gray-600", children: "Loading document preview..." })] }));
    }
    return (_jsxs("div", { className: "space-y-6", children: [metadata && (_jsxs("div", { className: "bg-gray-50 p-4 rounded-lg", children: [_jsx("h3", { className: "font-medium text-gray-900 mb-2", children: "Document Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4 text-sm", children: [metadata.filename && (_jsxs("div", { children: [_jsx("span", { className: "text-gray-500", children: "Filename:" }), _jsx("span", { className: "ml-2 text-gray-900", children: metadata.filename })] })), metadata.fileSize && (_jsxs("div", { children: [_jsx("span", { className: "text-gray-500", children: "Size:" }), _jsxs("span", { className: "ml-2 text-gray-900", children: [(metadata.fileSize / 1024 / 1024).toFixed(2), " MB"] })] })), metadata.pageCount && (_jsxs("div", { children: [_jsx("span", { className: "text-gray-500", children: "Pages:" }), _jsx("span", { className: "ml-2 text-gray-900", children: metadata.pageCount })] }))] })] })), _jsxs("div", { className: "bg-white border border-gray-200 rounded-lg", children: [_jsxs("div", { className: "p-4 border-b border-gray-200", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Extracted Text" }), _jsx("p", { className: "text-sm text-gray-500 mt-1", children: fields ? `${fields.length} fields detected` : 'Processing document...' })] }), _jsx("div", { className: "p-4", children: extractedText ? (_jsx("div", { className: "max-h-96 overflow-y-auto", children: _jsx("pre", { className: "whitespace-pre-wrap text-sm text-gray-700 font-mono leading-relaxed", children: extractedText }) })) : (_jsxs("div", { className: "text-center py-8 text-gray-500", children: [_jsx("svg", { className: "mx-auto h-12 w-12 text-gray-400", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" }) }), _jsx("p", { className: "mt-2", children: "No text extracted yet" })] })) })] }), fields && fields.length > 0 && (_jsxs("div", { className: "bg-white border border-gray-200 rounded-lg", children: [_jsx("div", { className: "p-4 border-b border-gray-200", children: _jsx("h3", { className: "font-medium text-gray-900", children: "Detected Fields Summary" }) }), _jsxs("div", { className: "p-4", children: [_jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: fields.slice(0, 6).map((field) => (_jsxs("div", { className: "border border-gray-100 rounded-lg p-3", children: [_jsx("div", { className: "text-sm font-medium text-gray-900", children: field.name }), _jsx("div", { className: "text-sm text-gray-600 mt-1 truncate", children: field.value }), _jsxs("div", { className: "text-xs text-gray-500 mt-1", children: ["Confidence: ", (field.confidence * 100).toFixed(0), "%"] })] }, field.id))) }), fields.length > 6 && (_jsx("div", { className: "text-center mt-4", children: _jsxs("span", { className: "text-sm text-gray-500", children: ["+", fields.length - 6, " more fields detected"] }) }))] })] }))] }));
};
export default FormPreview;
